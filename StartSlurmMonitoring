#!/bin/bash

checkpid () {
    pidfile=$1
    [[ -s ${pidfile} ]] || return 1
    fdate=$(stat -c %U ${pidfile})
    pdate=$(date --date="$(ps -h --format lstart $(cat ${pidfile}) || echo Jan 1 1970 UTC)" +%s)
    delta=$(( pdate - fdate ))
    [[ -10 -lt delta ]] &&  [[ delta -lt 10 ]] && return 0
    return 1
}

ScriptDir=$(readlink -f $(dirname $0))

[[ -s /etc/slurm/slurm.conf ]] || { echo "No slurm.conf file." ; exit 1 ; }

cm=$(grep ControlMachine /etc/slurm/slurm.conf)
cm=${cm/ControlMachine=/}

[[ -z ${cm+_} ]] && { echo "slurm.conf file lacks ControlMachine entry." ; exit 1 ; }

# We use these mappings to ensure the same database is used when we failover the control machine.
declare -A CMAliases=( [bcm1]=bcm [bcm2]=bcm [ironbcm1]=ironbcm [ironbcm2]=ironbcm )

[[ ${CMAliases[${cm}]+_} ]] && cm=${CMAliases[${cm}]}

if [[ $cm == "bcm" || $cm == "ironbcm" ]]
then
    #    . ~carriero/slurmMe
    # "borrowed" from module
    CmSlurmRoot=/cm/shared/apps/slurm/17.02.2
    export PATH=${CmSlurmRoot}/bin:$PATH
    export PATH=${CmSlurmRoot}/sbin:$PATH
    export LD_LIBRARY_PATH=${CmSlurmRoot}/lib64:$LD_LIBRARY_PATH
    export LD_LIBRARY_PATH=${CmSlurmRoot}/lib64/slurm:$LD_LIBRARY_PATH

    #. ~carriero/projects/slurm/utils/iron/ve_2.7.9/bin/activate
    source ~yliu/projects/slurm/utils/MonTestEnv/bin/activate
    # This allows us to use the same data archive for bcm1 and bcm2
else
    export PATH=/mnt/xfs1/bioinfoCentos7/software/installs/python/2.7.9/bin:$PATH
fi
echo "Using: $(which python)"

pData="/mnt/ceph/users/yliu/SlurmMonitorData/testing/${cm}_pickleData"
splitDir="/mnt/ceph/users/yliu/SlurmMonitorData/testing/${cm}_split/"
mkdir -p  $(dirname ${pData}) ${splitDir} || { echo "Failed to create support directories." ; exit 1 ; }

WebPort=8123

if checkpid ${cm}_web.pid 
then
    python ${ScriptDir}/smcpgraph.py ${WebPort} ${splitDir} > "smcp_${cm}_$(date +%Y%m%d_%T).log" 2>&1 &
    
    echo "$!" > ${cm}_web.pid
else
    echo "web server is already running."
fi

if checkpid ${cm}_monitor.pid
then
    while [[ 1 ]] 
    do
	python ${ScriptDir}/slurmMon.py demon ${pData} 2>&1 | grep -v "Warning: Permanently added"
	echo "Monitor returned: $(date). Restarting in 60 seconds."
	sleep 60
    done  > "smd_${cm}_$(date +%Y%m%d_%T).log" 2>&1 &
    echo "$!" > ${cm}_monitor.pid
else
    echo "monitor is already running."
fi
    
    
if checkpid ${cm}_index.pid
then
    while [[ 1 ]]
    do
	date
	time python ${ScriptDir}/indexAndSplitMonData.py ${pData} ${splitDir}/index ${splitDir} http://$(hostname):${WebPort}/updateSlurmData
	sleep 90
    done > "iasmd_${cm}_$(date +%Y%m%d_%T).log" 2>&1 &
    echo "$!" > ${cm}_index.pid
else
    echo "indexer is already running."
fi

